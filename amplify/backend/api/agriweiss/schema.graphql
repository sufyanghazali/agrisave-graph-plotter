# type Blog @model {
#     id: ID!
#     name: String!
#     posts: [Post] @connection(keyName: "byBlog", fields: ["id"])
# }

# type Post @model @key(name: "byBlog", fields: ["blogID"]) {
#     id: ID!
#     title: String!
#     blogID: ID!
#     blog: Blog @connection(fields: ["blogID"])
#     comments: [Comment] @connection(keyName: "byPost", fields: ["id"])
# }

# type Comment @model @key(name: "byPost", fields: ["postID", "content"]) {
#     id: ID!
#     postID: ID!
#     post: Post @connection(fields: ["postID"])
#     content: String!
# }

type Farm @model {
    id: ID!
    name: String!
    owners: [FarmUserJoin] @connection(keyName: "farm_owners", fields: ["id"])
    sensors: [Sensor] @connection(keyName: "farm_sensors", fields: ["id"])
}

type FarmUserJoin
    @model(queries: null)
    @key(name: "farm_owners", fields: ["farm_id", "user_id"])
    @key(name: "user_farms", fields: ["user_id", "farm_id"]) {
    id: ID!
    farm_id: ID!
    user_id: ID!
    farm: Farm! @connection(fields: ["farm_id"])
    user: User! @connection(fields: ["user_id"])
}

type User @model {
    id: ID!
    name: String!
    phone: String
    email: String!
    farms: [FarmUserJoin] @connection(keyName: "user_farms", fields: ["id"])
    sensors: [SensorUserJoin]
        @connection(keyName: "user_sensors", fields: ["id"])
}

type SensorUserJoin
    @model(queries: null)
    @key(name: "user_sensors", fields: ["user_id", "sensor_id"])
    @key(name: "sensor_owners", fields: ["sensor_id", "user_id"]) {
    id: ID!
    user_id: ID!
    sensor_id: ID!
    sensor: Sensor! @connection(fields: ["user_id"])
    user: User! @connection(fields: ["sensor_id"])
}

type Sensor @model @key(name: "farm_sensors", fields: ["farm_id"]) {
    id: ID!
    serial_number: String!
    farm_id: ID
    farm: Farm @connection(fields: ["farm_id"])
    owners: [SensorUserJoin]
        @connection(keyName: "sensor_owners", fields: ["id"])
    latitude: Float!
    longitude: Float!
    readings: [Reading] @connection(keyName: "sensor_readings", fields: ["id"])
}

type Reading @model @key(name: "sensor_readings", fields: ["sensor_id"]) {
    id: ID!
    sensor_id: ID!
    sensor: Sensor @connection(fields: ["sensor_id"])
    timestamp: Int!
    moisture: Float!
    temperature: Float!
}
